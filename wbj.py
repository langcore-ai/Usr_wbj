# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'wbj.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QAction, QHBoxLayout, QLabel, QWidget

from qfluentwidgets import FluentIcon as FIF


class Ui_Form(QWidget):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 533)
        self.checkBox = CheckBox(Form)
        self.checkBox.setGeometry(QtCore.QRect(80, 230, 91, 19))
        self.checkBox.setObjectName("checkBox")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.checkBox.setText(_translate("Form", "CheckBox"))

    def contextMenuEvent(self, e):
        menu = RoundMenu(parent=self)

        # add actions
        menu.addAction(QAction(FIF.COPY.icon(), 'Copy'))
        menu.addAction(QAction(FIF.CUT.icon(), 'Cut'))

        # add sub menu
        submenu = RoundMenu("Add to", self)
        submenu.setIcon(FIF.ADD.icon())
        submenu.addActions([
            QAction(FIF.VIDEO.icon(), 'Video'),
            QAction(FIF.MUSIC.icon(), 'Music'),
        ])
        menu.addMenu(submenu)

        # add actions
        menu.addActions([
            QAction(FIF.PASTE.icon(), 'Paste'),
            QAction(FIF.CANCEL.icon(), 'Undo')
        ])

        # add separator
        menu.addSeparator()
        menu.addAction(QAction(f'Select all'))

        # insert actions
        menu.insertAction(
            menu.menuActions()[-1], QAction(FIF.SETTING.icon(), 'Settings'))
        menu.insertActions(
            menu.menuActions()[-1],
            [QAction(FIF.HELP.icon(), 'Help'), QAction(FIF.FEEDBACK.icon(), 'Feedback')]
        )

        # show menu
        menu.exec(e.globalPos(), ani=True)


from qfluentwidgets import CheckBox, RoundMenu

if __name__ == '__main__':
    # enable dpi scale
    QApplication.setHighDpiScaleFactorRoundingPolicy(
        Qt.HighDpiScaleFactorRoundingPolicy.PassThrough)
    QApplication.setAttribute(Qt.AA_EnableHighDpiScaling)
    QApplication.setAttribute(Qt.AA_UseHighDpiPixmaps)
    app = QApplication(sys.argv)
    ui = Ui_Form()
    ui.show()
    sys.exit(app.exec_())